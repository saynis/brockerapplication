// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


enum Role {
  USER
  ADMIN
}


model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model employee {
  id        Int      @id @default(autoincrement())
  name      String
  mathernName String
  dateOfBirth String
  age       Int
  placeOfBirth String
  gender   String
  imageUrl String
  idimageUrl String
  idNumber String @unique
  phoneNumber String
  homeAddress String
  registrationNumber String @unique
  region String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workExperiences WorkExperience[]

 
}

enum Status {
  ACCEPTED
  INACTIVE
  PENDING
  REJECTED
}

model WorkExperience {
  id        Int      @id @default(autoincrement())
  employeeId Int
  companyName String
  position String
  startDate String
  endDate String
  description String
  status Status @default(PENDING)
  employee employee @relation(fields: [employeeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model campany {
  id        Int      @id @default(autoincrement())
  name      String
  registrationNumber String @unique
  region String
  address String
  phoneNumber String
  campanyType String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
}

